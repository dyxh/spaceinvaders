Class : CS223 Functional Programming
Group : Tejong Lim, David Huang
CNets : limt, davidhuang

=========================================================================
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                            Space Invaders                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
=========================================================================

Space Invaders, loosely based on the classic arcade game, is a web 
application programmed completely in Elm. The objective of the game is to
destroy all enemies before they reach your spaceship.

=========================================================================
* Progress *
=========================================================================

1) Player input and game state ------------------------------ DONE
2) Enemy movement/attack ------------------------------------ IN PROGRESS
3) Collision detection -------------------------------------- IN PROGRESS
4) User interface ------------------------------------------- MOSTLY DONE
5) Multiple levels ------------------------------------------ TO DO
6) Additional features -------------------------------------- TO DO

=========================================================================
* Instructions *
=========================================================================

-------------------------------------------------------------------------
* Gameplay Controls *
-------------------------------------------------------------------------

               Move Left/Right --------- Arrow Keys/WASD
               Fire/Shoot -------------- Space
               Start game -------------- Enter

-------------------------------------------------------------------------
* How to Start *
-------------------------------------------------------------------------

Our source code can be found in SpaceInvaders.elm and we have a 
precompiled html version in SpaceInvaders.html. To play the game, do any 
of the following:

Open SpaceInvaders.html in your favorite browser.

* OR *

In the command line, make sure you have Elm installed and change to the
same directory as SpaceInvaders.elm and run the following comamand:

  elm-reactor

The game should be available to play at:
    
  http://localhost:8000/SpaceInvaders.elm

* OR *

Compile and generate an html file with the following command and then open
in your favorite browser:

  elm-make SpaceInvaders.elm --output=SpaceInvaders.html

=========================================================================
* Summary
=========================================================================

*** A summary of our accomplishments and what we learned (1-2 pages) ***

Things we tried to do:

+ Basic game features
  - Player movement
  - Automatic enemy movement
  - Unique collision interactions
  - Basic UI changeability
  - Different weapon / enemy types
  - Random level generation with increaseing difficulty

+ MVC architecture and very modulated structure

+ Basic physics (collision detection, axis-aligned bounding boxes)

+ Event handling via signals

+ Garbage collection


Things that we had trouble with:

+ Modulated structure -
  have to be able to access certain parts of the state,
  while keeping things modulated?

+ Too many types

+ Collision & events & garbage collection & timing


Game features that could be added:

+ Multiple levels

+ Enemy can shoot lasers











Things we learned:
- MVC pattern
- Animation
- Keyboard inputs
- Rendering
- (super) Basic game physics

Game Features:
- Player movement/attack
- Enemy movment
- Player/laser can change colors!
- Destroy enemies with lasers
- Collision with enemies or letting too many enemies pass means death
- Basic UI

Things we could improve on
- Structuring (organization of modules, types)
- Collision detection/update not always in sync
- Signaling

Future implementations:

                              ##          ##
                                ##      ##
                              ##############
                            ####  ######  ####
                          ######################
                          ##  ##############  ##
                          ##  ##          ##  ##
                                ####  ####